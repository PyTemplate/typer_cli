name: Release

on:
  push:
    tags:
    - '*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        os: [ubuntu-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install test environment
      run: poetry install --extras=test
    - name: Run tests and collect coverage
      run: poetry run pytest
    - name: Generate JSON coverage report
      run: poetry run coverage json
    - name: Upload report to codecov
      uses: codecov/codecov-action@v3

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install lint environment
      run: poetry install --extras=lint
    - name: Run linters
      run: poetry run make lint

  create-release:
    needs: [test, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true

  publish-docs:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install docs environment
      run: poetry install --extras=docs
    - name: Generate Docs
      run: |
        poetry run make gen-docs
    - name: Publish Docs
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: docs # The branch the action should deploy to.
        folder: site/ # The folder the action should deploy.

  publish-package:
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Build package dist
      run: poetry build
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}

  publish-docker-image:
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: pytemplates/typer_cli
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
